#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1, maxit = 1,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1, maxit = 1,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1, maxit = 1,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1, maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1, maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1, maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob",
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob",
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob",
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob",
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- complete(imp)
#mean first time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob",
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
#loading libraries
library(tidyverse)
library(mice)
# this with() notation will come in handy later
fit <- with(nhanes, lm(bmi ~ age))
# this with() notation will come in handy later
fit <- with(nhanes, lm(bmi ~ age))
#look for statistics and missing values
summary(fit)
# this with() notation will come in handy later
fit <- with(nhanes, lm(bmi ~ age))
#look for statistics and missing values (# 9 observations were deleted)
summary(fit)
md.pattern(nhanes)
# this with() notation will come in handy later
fit <- with(nhanes, lm(bmi ~ age))
#look for statistics and missing values (# 9 observations were deleted)
summary(fit)
nhanes
# this with() notation will come in handy later
fit <- with(nhanes, lm(bmi ~ age))
#look for statistics and missing values (# 9 observations were deleted)
summary(fit)
#% missing
sum(is.na(nhanes$age))
sum(is.na(nhanes$age))
# this with() notation will come in handy later
fit <- with(nhanes, lm(bmi ~ age))
#look for statistics and missing values (# 9 observations were deleted)
summary(fit)
#% missing
colSums(is.na(nhanes$age))
# this with() notation will come in handy later
fit <- with(nhanes, lm(bmi ~ age))
#look for statistics and missing values (# 9 observations were deleted)
summary(fit)
#% missing
colSums(is.na(nhanes))
# this with() notation will come in handy later
fit <- with(nhanes, lm(bmi ~ age))
#look for statistics and missing values (# 9 observations were deleted)
summary(fit)
#Let see the % of missing values in BMI colum
#% missing
colSums(is.na(nhanes))/nrow(nhanes)*100
df_nhanes <- nhanes #store in df to avoid changes in original df
imp_mean <- mice(fdgs, method = "mean", seed = 1,
m = 1, print = FALSE)
xyplot(imp_mean, bmi ~ age)
df_nhanes <- nhanes #store in df to avoid changes in original df
imp_mean <- mice(df_nhanes, method = "mean", seed = 1,
m = 1, print = FALSE)
xyplot(imp_mean, bmi ~ age)
df_nhanes <- nhanes #store in df to avoid changes in original df
imp_mean <- mice(df_nhanes, method = "mean", maxit = 1,
m = 1, print = FALSE)
xyplot(imp_mean, bmi ~ age) #plot the inserted points (red ones)
#complete DF with missing values
df_nhanes <- complete(imp_mean)
summary(df_nhanes)
df_nhanes[is.na(df_nhanes)]
df_nhanes[rowSums(is.na(df_fdgs)) > 0,]
df_nhanes[rowSums(is.na(df_nhanes)) > 0,]
df_nhanes <- nhanes #store in df to avoid changes in original df
imp_mean <- mice(df_nhanes, method = "mean", maxit = 1,
m = 1, print = FALSE)
xyplot(imp_mean, bmi ~ age) #plot the inserted points (red ones) WHy there is only 3 points if total missing points is 9?
df_nhanes[rowSums(is.na(df_nhanes)) > 0,]
df_nhanes[rowSums(is.na(df_nhanes)) > 0,2]
df_nhanes[rowSums(is.na(df_nhanes)) > 0,]
# this with() notation will come in handy later
fit_mean <- with(df_nhanes_mean, lm(bmi ~ age))
# this with() notation will come in handy later
fit_mean <- with(df_nhanes_mean, lm(bmi ~ age))
df_nhanes_mean <- complete(imp_mean)
summary(df_nhanes_mean)
# this with() notation will come in handy later
fit_mean <- with(df_nhanes_mean, lm(bmi ~ age))
#look for statistics and missing values (# 9 observations were deleted)
summary(fit_mean)
#Original regression without mean imputation
summary(fit)
```{r}
#Original regression without mean imputation
summary(fit)
# this with() notation will come in handy later
fit_mean <- with(df_nhanes_mean, lm(bmi ~ age))
#look for statistics and missing values (# 9 observations were deleted)
summary(fit_mean)
#create a df to store the imputaiton
df_nhanes_reg <- df_nhanes
# Use regression (fit_mean) to predict the value
df_nhanes_reg <- df_nhanes_reg %>%
#create a pred column to compare with original
mutate(pred = predict(fit_mean, .)) %>%
# Replace NA with pred in var1
mutate(bmi = ifelse(is.na(bmi), pred, bmi))
df_nhanes_reg
summary(df_nhanes_reg)
summary(df_nhanes)
#df with imputation by regression
summary(df_nhanes_reg)
#df with stocasthic regression imputation Using mice
df_nhanes_stocreg <- df_nhanes
imp_stoc <- mice(df_nhanes, method = "norm.nob", seed = 1,
m = 5, print = FALSE)
xyplot(imp, wgt ~ age )
#df with stocasthic regression imputation Using mice
df_nhanes_stocreg <- df_nhanes
imp_stoc <- mice(df_nhanes, method = "norm.nob", seed = 1,
m = 5, print = FALSE)
xyplot(imp, bmi ~ age )
#df with stocasthic regression imputation Using mice
df_nhanes_stocreg <- df_nhanes
imp_stoc <- mice(df_nhanes, method = "norm.nob", seed = 1,
m = 5, print = FALSE)
xyplot(imp_stoc, bmi ~ age )
#complete the df with imputation values (stoc regression)
df_nhanes_stocreg <- complete(imp_stoc)
summary(df_nhanes_stocreg)
#statics of regression model
summary(imp_stoc)
#statics of regression model
stoc_reg <- with(df_nhanes_stocreg, (bmi ~age))
summary(stoc_reg)
#statics of regression model
stoc_reg <- with(df_nhanes_stocreg, lm(bmi ~age))
summary(stoc_reg)
#Original regression with missing values
summary(fit)
#Original regression with mean values
summary(fit_mean)
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 123,
m = 5, print = FALSE)
imp_stoc123
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 123,
m = 5, print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes_stoc123, lm(bmi ~age)) #run the regression with this imputaiton values
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 123,
m = 5, print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes_stoc123, lm(bmi ~age)) #run the regression with this imputaiton values
reg123
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 123,
m = 5, print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes_stoc123, lm(age ~ bmi)) #run the regression with this imputaiton values
reg123
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 123,
m = 5, print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes_stoc123, lm(age ~ bmi)) #run the regression with this imputaiton values
summary(reg123)
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 13,
m = 5, print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes_stoc123, lm(age ~ bmi)) #run the regression with this imputaiton values
summary(reg123)
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 123,
m = 5, print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes_stoc123, lm(age ~ bmi)) #run the regression with this imputaiton values
summary(reg123)
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 123,
m = 5, print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes_stoc123, lm(bmi ~ age)) #run the regression with this imputaiton values
summary(reg123)
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 123,
m = 5, print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes_stoc123, lm(age ~ bmi)) #run the regression with this imputaiton values
summary(reg123)
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 123,
m = 20, print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes_stoc123, lm(age ~ bmi)) #run the regression with this imputaiton values
summary(reg123)
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 123,
print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes_stoc123, lm(age ~ bmi)) #run the regression with this imputaiton values
summary(reg123)
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 3,
print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes_stoc123, lm(age ~ bmi)) #run the regression with this imputaiton values
summary(reg123)
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 2,
print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes_stoc123, lm(age ~ bmi)) #run the regression with this imputaiton values
summary(reg123)
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 1,
print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes_stoc123, lm(age ~ bmi)) #run the regression with this imputaiton values
summary(reg123)
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 123,
print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes_stoc123, lm(age ~ bmi)) #run the regression with this imputaiton values
summary(reg123)
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 123,
print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes, lm(age ~ bmi)) #run the regression with this imputaiton values
summary(reg123)
imp_stoc123 <- mice(df_nhanes, method = "norm.nob", seed = 123,
print = FALSE)
df_nhanes_stoc123 <- df_nhanes #copy original
df_nhanes_stoc123 <- complete(imp_stoc123) #complete with imputation stock seed = 123
reg123 <- with(df_nhanes_stoc123, lm(age ~ bmi)) #run the regression with this imputaiton values
summary(reg123)
imp$data
imp <- mice(nhanes, seed = 1, m = 20, print = FALSE)
summary(fit)
imp <- mice(nhanes, seed = 1, m = 20, print = FALSE)
summary(imp)
imp$data
imp$imp
imp <- mice(nhanes, seed = 1, m = 20, print = FALSE)
summary(imp)
imp$imp
imp <- mice(nhanes, m = 20, print = FALSE)
summary(imp)
imp$imp
imp$imp
df_nhanes_multi <- nhanes
df_nhanes_multi <- complete(imp)
df_nhanes_multi
reg_multi <- with(df_nhanes_multi, lm(bmi ~ age))
reg_multi <- with(df_nhanes_multi, lm(bmi ~ age))
summary(reg_multi)
summary(df_nhanes_multi)
fit <- with(data = imp, exp = lm(bmi ~ age))
summary(pool(fit))
#The pool() function combines the estimates from m repeated complete data analyses.
#Imp are already did but show again just to make code clear
imp <- mice(nhanes, m = 20, print = FALSE)
fit <- with(data = imp, exp = lm(bmi ~ age))
summary(pool(fit))
#The pool() function combines the estimates from m repeated complete data analyses.
#Imp are already did but show again just to make code clear
imp <- mice(nhanes, m = 20, print = FALSE)
fit <- with(data = imp, exp = lm(bmi ~ age))
summary(pool(fit))
#The pool() function combines the estimates from m repeated complete data analyses.
#Imp are already did but show again just to make code clear
imp <- mice(nhanes, m = 20, print = FALSE)
fit <- with(data = imp, exp = lm(bmi ~ age))
summary(pool(fit))
#The pool() function combines the estimates from m repeated complete data analyses.
#Imp are already did but show again just to make code clear | Every time u run the code the results changes because there are random variance added to results by multiple imputations
imp <- mice(nhanes, m = 20, print = FALSE)
fit <- with(data = imp, exp = lm(bmi ~ age))
summary(pool(fit))
xyplot(imp, bmi ~age)
xyplot(fit, bmi ~age)
xyplot(imp, bmi ~age)
plot(fit)
fit <- lm(Ozone ~ Solar.R, data = airquality)
pred <- predict(fit, newdata = ic(airquality))
fit <- lm(Ozone ~ Solar.R, data = airquality)
pred <- predict(fit, newdata = ic(airquality))
pred
fit <- lm(Ozone ~ Solar.R, data = airquality)
pred <- predict(fit, newdata = ic(airquality))
pred
airquality
airquality2 <- replace_na(pred)
airquality2 <- replace_na(pred)
airquality2
airquality2 <- replace_na(airquality, pred)
airquality2 <- replace_na(ic(airquality), pred)
airquality2 <- replace_na(is.na.data.frame(airquality), pred)
airquality2 <- replace_na(is.na(airquality), pred)
# Use fit to predict the value
df4 <- df_fdgs_age2 %>%
#create a pred column to compare with original
mutate(pred = predict(multi.fit, .)) %>%
# Replace NA with pred in var1
mutate(wgt = ifelse(is.na(.), pred, .))
#predict some values
value <- data.frame(
reg = c("North"),
age2 = c(20),
sex = c("girl"),
hgt = c(30)
)
pred2 <- predict(multi.fit, value)
#predict some values
value <- data.frame(
reg = c("North"),
age2 = c(20),
sex = c("girl"),
hgt = c(30)
)
pred2 <- predict(multi.fit, value)
#df with reg manually (u have to use df without the n/a)
df_fdgs_age2 <- df_fdgs %>%
mutate( age2 = age ** 2) # elevate age to quadratic as question suggests
#df with reg manually (u have to use df without the n/a)
df_fdgs_age2 <- df_fdgs %>%
mutate( age2 = age ** 2) # elevate age to quadratic as question suggests
#loading libraries
library(tidyverse)
library(mice)
library(dplyr)
df <- nhanes
df_cc <- na.omit(df) #omiting the n/a values
df_cc
#compute the mean
imp_mean <- mice(df, method = "mean", m = 1, maxit = 1)
#put on new df to store the missing values as mean values of each colum
df_mean <- complete(imp_mean)
df_mean
var(df)
#Comparison var ( As u can imagine if u are inputing values as MEAN, the variance will decrease because more points will become "closer to the mean")
var(df_cc)
var(df_mean)
#loading and look for summaries
md.pattern(fdgs)
#Original
df_fdgs <- fdgs
#df without n/a
df_fdgs_cc <- na.omit(df_fdgs)
#df with mean imputation
imp_mean <- mice(df_fdgs, method = "mean", m = 1, maxit = 1)
df_fgds_mean <- complete(imp_mean)
#look for df`s
md.pattern( df_fgds_mean)
#df with reg manually (u have to use df without the n/a)
df_fdgs_age2 <- df_fdgs %>%
mutate( age2 = age ** 2) # elevate age to quadratic as question suggests
multi.fit = lm(wgt~reg+age2+sex+hgt, data=df_fdgs_age2)
summary(multi.fit)
#predict some values
value <- data.frame(
reg = c("North"),
age2 = c(20),
sex = c("girl"),
hgt = c(30)
)
pred2 <- predict(multi.fit, value)
pred2
# Use fit to predict the value
df4 <- df_fdgs_age2 %>%
#create a pred column to compare with original
mutate(pred = predict(multi.fit, .)) %>%
# Replace NA with pred in var1
mutate(wgt = ifelse(is.na(.), pred, .))
# Use fit to predict the value
df4 <- df_fdgs_age2 %>%
#create a pred column to compare with original
mutate(pred = predict(multi.fit, .)) %>%
# Replace NA with pred in var1
mutate(wgt = ifelse(is.na(.), pred, .))
#show original df just to compare
df_fdgs[rowSums(is.na(df_fdgs)) > 0,]
# Use fit to predict the value
df4 <- df_fdgs_age2 %>%
#create a pred column to compare with original
mutate(pred = predict(multi.fit, .)) %>%
# Replace NA with pred in var1
mutate(. = ifelse(is.na(.), pred, .))
# Use fit to predict the value
df3 <- df_fdgs_age2 %>%
#create a pred column to compare with original
mutate(pred = predict(multi.fit, .)) %>%
# Replace NA with pred in var1
mutate(wgt = ifelse(is.na(wgt), pred, wgt))
# See the result
head(df3)
# Use fit to predict the value
df4 <- df_fdgs_age2 %>%
mutate_all(multi.fit)
# Use fit to predict the value
df4 <- df_fdgs_age2 %>%
mutate_all(wgt, multi.fit)
# Use fit to predict the value
df4 <- df_fdgs_age2 %>%
mutate_all(var=wgt, multi.fit)
# Use fit to predict the value
df4 <- df_fdgs_age2 %>%
mutate_at(wgt, multi.fit)
# Use fit to predict the value
df4 <- df_fdgs_age2 %>%
mutate_at(c("wgt"), multi.fit)
