mean(df_fdgs_cc$wgt)
# Use fit to predict the value
df3 <- df_fdgs_age2 %>%
mutate(pred = predict(multi.fit, .)) %>%
# Replace NA with pred in var1
mutate(wgt = ifelse(is.na(wgt), pred, wgt))
# See the result
df3
# Use fit to predict the value
df3 <- df_fdgs_age2 %>%
mutate(pred = predict(multi.fit, .)) %>%
# Replace NA with pred in var1
mutate(wgt = ifelse(is.na(wgt), pred, wgt))
# See the result
df3.head()
# Use fit to predict the value
df3 <- df_fdgs_age2 %>%
mutate(pred = predict(multi.fit, .)) %>%
# Replace NA with pred in var1
mutate(wgt = ifelse(is.na(wgt), pred, wgt))
# See the result
head(df3)
#loading libraries
library(tidyverse)
library(mice)
library(dplyr)
?nhanes
df <- nhanes
df_cc <- na.omit(df) #omiting the n/a values
df_cc
#compute the mean
imp_mean <- mice(df, method = "mean", m = 1, maxit = 1)
#put on new df to store the missing values as mean values of each colum
df_mean <- complete(imp_mean)
df_mean
var(df)
#Comparison var ( As u can imagine if u are inputing values as MEAN, the variance will decrease because more points will become "closer to the mean")
var(df_cc)
var(df_mean)
#loading and look for summaries
md.pattern(fdgs)
#Original
df_fdgs <- fdgs
#df without n/a
df_fdgs_cc <- na.omit(df_fdgs)
#df with mean imputation
imp_mean <- mice(df_fdgs, method = "mean", m = 1, maxit = 1)
df_fgds_mean <- complete(imp_mean)
#look for df`s
md.pattern( df_fgds_mean)
#df with regression imputation Using mice
df_fgds_reg <- df_fdgs
imp <- mice(df_fgds_reg, method = "norm.predict", seed = 1,
m = 1, print = FALSE)
xyplot(imp, wgt ~ age )
#df with reg manually (u have to use df without the n/a)
df_fdgs_age2 <- df_fdgs_cc %>%
mutate( age2 = age ** 2) # elevate age to quadratic as question suggests
multi.fit = lm(wgt~reg+age2+sex+hgt, data=df_fdgs_age2)
summary(multi.fit)
#predict some values
value <- data.frame(
reg = c("North"),
age2 = c(20),
sex = c("girl"),
hgt = c(30)
)
pred2 <- predict(multi.fit, value)
pred2
#show original df just to compare
df_fdgs[rowSums(is.na(df_fdgs)) > 0,]
# Use fit to predict the value
df3 <- df_fdgs_age2 %>%
mutate(pred = predict(multi.fit, .)) %>%
# Replace NA with pred in var1
mutate(wgt = ifelse(is.na(wgt), pred, wgt))
# See the result
head(df3)
#look at 4 indexes to compare the values with original df
#yeah i know i should have pick up indexes... but anyways..
df3[c(275,1278,1419,2034),]
md.pattern(df3)
#lookinf for the mean, removing N/A of the hgt colum
mean(df3$wgt)
mean(df_fdgs_cc$wgt)
md.pattern(df3)
# Use fit to predict the value
df3 <- df_fdgs_age2 %>%
mutate(pred = predict(multi.fit, .)) #%>%
# Replace NA with pred in var1
#mutate(wgt = ifelse(is.na(wgt), pred, wgt))
# See the result
head(df3)
#look at 4 indexes to compare the values with original df
#yeah i know i should have pick up indexes... but anyways..
df3[c(275,1278,1419,2034),]
# Use fit to predict the value
df3 <- df_fdgs_age2 %>%
#create a pred column to compare with original
mutate(pred = predict(multi.fit, .)) %>%
# Replace NA with pred in var1
mutate(wgt = ifelse(is.na(wgt), pred, wgt))
# See the result
head(df3)
#look at 4 indexes to compare the values with original df
#yeah i know i should have pick up indexes... but anyways..
df3[id == "275"]
#look at 4 indexes to compare the values with original df
#yeah i know i should have pick up indexes... but anyways..
df3 %% filter (id = "275")
#look at 4 indexes to compare the values with original df
#yeah i know i should have pick up indexes... but anyways..
df3 %% filter (id = 275)
#look at 4 indexes to compare the values with original df
#yeah i know i should have pick up indexes... but anyways..
df3 %%
filter(id = 275)
#look at 4 indexes to compare the values with original df
#yeah i know i should have pick up indexes... but anyways..
df3 %>%
filter(id = 275)
#look at 4 indexes to compare the values with original df
#yeah i know i should have pick up indexes... but anyways..
df3 %>%
filter(id > 275)
#look at 4 indexes to compare the values with original df
#yeah i know i should have pick up indexes... but anyways..
df3 %>%
filter(id > 100984)
#look at 4 indexes to compare the values with original df
df3 %>%
filter(id == 100984)
#look at 4 indexes to compare the values with original df
df3 %>%
filter(id == 103811)
#look at 4 indexes to compare the values with original df
df3 %>%
filter(id > 103811)
#look at 4 indexes to compare the values with original df
df3 %>%
filter(id > 103810)
#show original df just to compare
df_fdgs[rowSums(is.na(df_fdgs)) > 0,]
#look at 4 indexes to compare the values with original df
df3 %>%
filter(id > 103810)
#df with reg manually (u have to use df without the n/a)
df_fdgs_age2 <- df_fdgs %>%
mutate( age2 = age ** 2) # elevate age to quadratic as question suggests
multi.fit = lm(wgt~reg+age2+sex+hgt, data=df_fdgs_age2)
summary(multi.fit)
# Use fit to predict the value
df3 <- df_fdgs_age2 %>%
#create a pred column to compare with original
mutate(pred = predict(multi.fit, .)) %>%
# Replace NA with pred in var1
mutate(wgt = ifelse(is.na(wgt), pred, wgt))
# See the result
head(df3)
#look at 4 indexes to compare the values with original df
df3 %>%
filter(id > 103810)
#look at 4 indexes to compare the values with original df
df3 %>%
filter(id == 103811)
#look at 4 indexes to compare the values with original df
df3 %>%
filter(id == c(103811, 100984, 105872 )
#look at 4 indexes to compare the values with original df
df3 %>%
filter(id == c(103811, 100984, 105872 ))
#look at 3 indexes to compare the values with original df
df3 %>%
filter(id == in c(103811, 100984, 105872 ))
#look at 3 indexes to compare the values with original df
df3 %>%
filter(id == %in% c(103811, 100984, 105872 ))
#look at 3 indexes to compare the values with original df
df3 %>%
filter(id == c(105872, 103811, 100984, 105872 ))
#look at 3 indexes to compare the values with original df
df3 %>%
filter(id == c(105872, 103811))
#show original df just to compare
df_fdgs[rowSums(is.na(df_fdgs)) > 0,1]
#look at 3 indexes to compare the values with original df
df3 %>%
filter(id == ids)
#look at 3 indexes to compare the values with original df
df3 %>%
filter(id == c(ids))
#look at 3 indexes to compare the values with original df
df3[ids]
#look at 3 indexes to compare the values with original df
df3[ids,]
#look at 3 indexes to compare the values with original df
df3[ids,1]
#show original df just to compare
ids <- df_fdgs[rowSums(is.na(df_fdgs)) > 0,1]
#show original df just to compare
ids <- df_fdgs[rowSums(is.na(df_fdgs)) > 0,1]
ids
#look at 3 indexes to compare the values with original df
df3[ids]
#look at 3 indexes to compare the values with original df
filter(df3, ids)
#look at 3 indexes to compare the values with original df
filter(df3, id = ids)
#look at 3 indexes to compare the values with original df
filter(df3, id = c(ids))
#show original df just to compare
df_fdgs[rowSums(is.na(df_fdgs)) > 0,]
#look at 3 indexes to compare the values with original df
ids <- df_fdgs[rowSums(is.na(df_fdgs)) > 0,1] #picking every ids with n/a values
filter(df3, id = 100981)
#look at 3 indexes to compare the values with original df
ids <- df_fdgs[rowSums(is.na(df_fdgs)) > 0,1] #picking every ids with n/a values
filter(df3, id == 100981)
#look at 3 indexes to compare the values with original df
ids <- df_fdgs[rowSums(is.na(df_fdgs)) > 0,1] #picking every ids with n/a values
filter(df3, id == 100981)
df3
#look at 3 indexes to compare the values with original df
ids <- df_fdgs[rowSums(is.na(df_fdgs)) > 0,1] #picking every ids with n/a values
filter(df3, id == c(ids))
#look at 3 indexes to compare the values with original df
ids <- df_fdgs[rowSums(is.na(df_fdgs)) > 0,1] #picking every ids with n/a values
filter(df3, id == ids)
#look at 3 indexes to compare the values with original df
ids <- df_fdgs[rowSums(is.na(df_fdgs)) > 0,1] #picking every ids with n/a values
filter(df3, id = ids)
#look at 3 indexes to compare the values with original df
ids <- df_fdgs[rowSums(is.na(df_fdgs)) > 0,1] #picking every ids with n/a values
filter(df3, id == ids)
#look at 3 indexes to compare the values with original df
ids <- df_fdgs[rowSums(is.na(df_fdgs)) > 0,1] #picking every ids with n/a values
filter(df3, id == 100984)
#look at 3 indexes to compare the values with original df
ids <- df_fdgs[rowSums(is.na(df_fdgs)) > 0,1] #picking every ids with n/a values
filter(df3, id %in% ids)
md.pattern(df3)
#lookinf for the mean, removing N/A of the hgt colum
mean(df3$wgt)
mean(df_fdgs_cc$wgt)
```{r}
#df with regression imputation Using mice
df_fgds_reg <- df_fdgs
imp <- mice(df_fgds_reg, method = "norm.nob", seed = 1,
m = 1, print = FALSE)
xyplot(imp, wgt ~ age )
df_fgds_reg <- complete(imp)
df_fgds_reg
df_fgds_reg <- complete(imp)
md.pattern(df_fgds_reg)
mean(df_fgds_reg)
mean(df_fgds_reg$wgt)
imp <- mice(df_fgds_reg, method = "norm.nob", seed = 1,
m = 1, print = FALSE)
df_fgds_reg <-complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
imp <- mice(df_fgds_reg, method = "norm.nob", seed = 1,
m = 1, print = FALSE)
df_fgds_reg <-complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
imp <- mice(df_fgds_reg, method = "norm.nob", seed = 1,
m = 5, print = FALSE)
df_fgds_reg <-complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
#mean first time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fgds_reg, method = "norm.nob", seed = 1,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fgds_reg, method = "norm.nob", seed = 1,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fgds_reg, method = "norm.nob", seed = 1,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
#df with regression imputation Using mice
df_fgds_reg <- df_fdgs
imp <- mice(df_fgds_reg, method = "norm.nob", seed = 1,
m = 5, print = FALSE)
xyplot(imp, wgt ~ age )
df_fgds_reg <- complete(imp)
md.pattern(df_fgds_reg)
#mean first time
mean(df_fgds_reg$wgt)
#mean first time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fgds_reg, method = "norm.nob", seed = 2,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fgds_reg, method = "norm.nob", seed = 2,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fgds_reg, method = "norm.nob", seed = 1,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fgds_reg, method = "norm.nob", seed = 1,
m = 20, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fgds_reg, method = "norm.nob", seed = 1,
m = 20, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1,
m = 20, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1,
m = 20, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
md.pattern(df_fdgs)
imp <- mice(df_fdgs, method = "norm.nob", seed = 1,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
#df with regression imputation Using mice
df_fgds_reg <- df_fdgs
imp <- mice(df_fdgs, method = "norm.nob", seed = 1,
m = 5, print = FALSE)
xyplot(imp, wgt ~ age )
#mean first time
mean(df_fgds_reg$wgt)
df_fgds_reg <- complete(imp)
md.pattern(df_fgds_reg)
#mean first time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
md.pattern(df_fdgs)
imp <- mice(df_fdgs, method = "norm.nob", seed = 2,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
md.pattern(df_fdgs)
imp <- mice(df_fdgs, method = "norm.nob", seed = 2,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
md.pattern(df_fdgs)
imp <- mice(df_fdgs, method = "norm.nob", seed = 2,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 2,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 2,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1, maxit = 1,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1, maxit = 1,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1, maxit = 1,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1, maxit = 1,
m = 5, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1, maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1, maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", seed = 1, maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob", maxit = 1,
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob",
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob",
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob",
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob",
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
df_fgds_reg <- complete(imp)
#mean first time
mean(df_fgds_reg$wgt)
df_fgds_reg <- df_fdgs #clean df
imp <- mice(df_fdgs, method = "norm.nob",
m = 1, print = FALSE)
df_fgds_reg <- complete(imp)
#mean 2nd time
mean(df_fgds_reg$wgt)
