g1 <- ggdendrogram(result) + ylim(0,10) + labs(title = "Small Dataset")
#Small dataset
distances <- dist(sim_df_small_un, method = "manhattan")
result <- hclust(distances, method = "complete")
g1 <- ggdendrogram(result) + ylim(0,10) + labs(title = "Small Dataset")
g1
#Small dataset
distances <- dist(sim_df_small_un, method = "manhattan")
result_com_man <- hclust(distances, method = "complete")
g1 <- ggdendrogram(result_com_man) + ylim(0,10) + labs(title = "Small Dataset")
g1
#now we see that the average distance increase.
#Small dataset
distances <- dist(sim_df_small_un, method = "euclidean")
result_com_eu <- hclust(distances, method = "complete")
g1 <- ggdendrogram(result_com_eu) + ylim(0,10) + labs(title = "Small Dataset")
#large dataset
distances <- dist(sim_df_large_un, method = "euclidean")
result <- hclust(distances, method = "complete")
g2 <- ggdendrogram(result) + ylim(0,10) + labs(title = "Large Dataset")
g1 + g2
#in the small dataset the distances are lesser than on large, so the points are closer to eachother, as we see in previous experiments. Max height = max distance = 5,5 on smalldf, and 10 in largedf.
cutree(result_com_man)
cutree(result_com_man, k=3)
cutree(result_com_man, k=3)
cutree(result_com_eu, k=3)
result_com_man
man <- cutree(result_com_man, k=3)
euc <- cutree(result_com_eu, k=3)
sim_df_small_un  <- sim_df_small_un %>%
mutate("man" = man,
"euc" = euc)
sim_df_small
man <- cutree(result_com_man, k=3)
euc <- cutree(result_com_eu, k=3)
sim_df_small_un  <- sim_df_small_un %>%
mutate("man" = man,
"euc" = euc)
sim_df_small_un
man <- cutree(result_com_man, k=3)
euc <- cutree(result_com_eu, k=3)
sim_df_small_un  <- sim_df_small_un %>%
mutate("man" = man, #assign the classes from manhattan distance
"euc" = euc) #assign the classes from euclidean distance
g1 <- ggplot(sim_df_small_un, aes(x1,x2, color=man))
g2 <- ggplot(sim_df_small_un, aes(x1,x2, color=euc))
man <- cutree(result_com_man, k=3)
euc <- cutree(result_com_eu, k=3)
sim_df_small_un  <- sim_df_small_un %>%
mutate("man" = man, #assign the classes from manhattan distance
"euc" = euc) #assign the classes from euclidean distance
g1 <- ggplot(sim_df_small_un, aes(x1,x2, color=man))
g2 <- ggplot(sim_df_small_un, aes(x1,x2, color=euc))
g1 + g2
man <- cutree(result_com_man, k=3)
euc <- cutree(result_com_eu, k=3)
sim_df_small_un  <- sim_df_small_un %>%
mutate("man" = man, #assign the classes from manhattan distance
"euc" = euc) #assign the classes from euclidean distance
g1 <- ggplot(sim_df_small_un, aes(x1,x2, color=man)) + geom_point()
g2 <- ggplot(sim_df_small_un, aes(x1,x2, color=euc)) + geom_point()
g1 + g2
man <- cutree(result_com_man, k=3)
euc <- cutree(result_com_eu, k=3)
sim_df_small_un  <- sim_df_small_un %>%
mutate("man" = man, #assign the classes from manhattan distance
"euc" = euc) #assign the classes from euclidean distance
g1 <- ggplot(sim_df_small_un, aes(x1,x2, color=man)) + geom_point() + labs(tittle= "3-Clusters Manhattan Distances")
g2 <- ggplot(sim_df_small_un, aes(x1,x2, color=euc)) + geom_point() + labs(tittle= "3-Clusters Euclidean Distances")
g1 + g2
man <- cutree(result_com_man, k=3)
euc <- cutree(result_com_eu, k=3)
sim_df_small_un  <- sim_df_small_un %>%
mutate("man" = man, #assign the classes from manhattan distance
"euc" = euc) #assign the classes from euclidean distance
g1 <- ggplot(sim_df_small_un, aes(x1,x2, color=man)) + geom_point() + labs(title= "3-Clusters Manhattan Distances")
g2 <- ggplot(sim_df_small_un, aes(x1,x2, color=euc)) + geom_point() + labs(title= "3-Clusters Euclidean Distances")
g1 + g2
man <- cutree(result_com_man, k=3)
euc <- cutree(result_com_eu, k=3)
sim_df_small_un  <- sim_df_small_un %>%
mutate("man" = man, #assign the classes from manhattan distance
"euc" = euc) #assign the classes from euclidean distance
g1 <- ggplot(sim_df_small_un, aes(x1,x2, shape=man)) + geom_point() + labs(title= "3-Clusters Manhattan Distances")
g2 <- ggplot(sim_df_small_un, aes(x1,x2, shape=euc)) + geom_point() + labs(title= "3-Clusters Euclidean Distances")
g1 + g2
man <- cutree(result_com_man, k=3)
euc <- cutree(result_com_eu, k=3)
sim_df_small_un  <- sim_df_small_un %>%
mutate("man" = man, #assign the classes from manhattan distance
"euc" = euc) #assign the classes from euclidean distance
g1 <- ggplot(sim_df_small_un, aes(x1,x2, size=man)) + geom_point() + labs(title= "3-Clusters Manhattan Distances")
g2 <- ggplot(sim_df_small_un, aes(x1,x2, size=euc)) + geom_point() + labs(title= "3-Clusters Euclidean Distances")
g1 + g2
#we see the boundaries of the classes mostly in the middle-points is different
man <- cutree(result_com_man, k=3)
euc <- cutree(result_com_eu, k=3)
sim_df_small_un  <- sim_df_small_un %>%
mutate("man" = man, #assign the classes from manhattan distance
"euc" = euc) #assign the classes from euclidean distance
g1 <- ggplot(sim_df_small_un, aes(x1,x2, color=man)) + geom_point() + labs(title= "3-Clusters Manhattan Distances")
g2 <- ggplot(sim_df_small_un, aes(x1,x2, color=euc)) + geom_point() + labs(title= "3-Clusters Euclidean Distances")
g1 + g2
#we see the boundaries of the classes mostly in the middle-points is different
sim_kmeans <- kmeans(sim_df_large_un, centers=3)
fviz_cluster(sim_kmeans, data = sim_df[,1:2])
sim_kmeans <- kmeans(sim_df_large_un, centers=3)
fviz_cluster(sim_df_large_un, data = sim_df[,1:2])
sim_kmeans <- kmeans(sim_df_large_un, centers=3)
fviz_cluster(sim_kmeans, data = sim_df_large_un[,1:2])
sim_kmeans <- kmeans(sim_df_large_un, centers=6)
fviz_cluster(sim_kmeans, data = sim_df_large_un[,1:2])
sim_kmeans <- kmeans(sim_df_large_un, centers=6)
sim_kmeans
fviz_cluster(sim_kmeans, data = sim_df_large_un[,1:2])
k2 <- kmeans(sim_df_large_un, centers=2)
k3 <- kmeans(sim_df_large_un, centers=3)
k4 <- kmeans(sim_df_large_un, centers=4)
k6 <- kmeans(sim_df_large_un, centers=6)
k2
k2$cluster
k2 <- kmeans(sim_df_large_un, centers=2)
k3 <- kmeans(sim_df_large_un, centers=3)
k4 <- kmeans(sim_df_large_un, centers=4)
k6 <- kmeans(sim_df_large_un, centers=6)
sim_df_large_un_kmeans <- sim_df_large_un %>%
mutate("k2" = k2$cluster,
"k3" = k3$cluster,
"k4" = k4$cluster,
"k6" = k6$cluster,
)
ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k2))+geom_point()
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k2))+geom_point() ) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k3))+geom_point() )
k2 <- kmeans(sim_df_large_un, centers=2)
k3 <- kmeans(sim_df_large_un, centers=3)
k4 <- kmeans(sim_df_large_un, centers=4)
k6 <- kmeans(sim_df_large_un, centers=6)
sim_df_large_un_kmeans <- sim_df_large_un %>%
mutate("k2" = k2$cluster,
"k3" = k3$cluster,
"k4" = k4$cluster,
"k6" = k6$cluster,
)
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k2))+geom_point() ) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k3))+geom_point() ) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k4))+geom_point() ) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k6))+geom_point() )
k2 <- kmeans(sim_df_large_un, centers=2)
k3 <- kmeans(sim_df_large_un, centers=3)
k4 <- kmeans(sim_df_large_un, centers=4)
k6 <- kmeans(sim_df_large_un, centers=6)
sim_df_large_un_kmeans <- sim_df_large_un %>%
mutate("k2" = k2$cluster,
"k3" = k3$cluster,
"k4" = k4$cluster,
"k6" = k6$cluster,
)
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k2))+geom_point() ) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k3))+geom_point() ) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k4))+geom_point() ) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k6))+geom_point() ) + theme_classic()
k2 <- kmeans(sim_df_large_un, centers=2)
k3 <- kmeans(sim_df_large_un, centers=3)
k4 <- kmeans(sim_df_large_un, centers=4)
k6 <- kmeans(sim_df_large_un, centers=6)
sim_df_large_un_kmeans <- sim_df_large_un %>%
mutate("k2" = k2$cluster,
"k3" = k3$cluster,
"k4" = k4$cluster,
"k6" = k6$cluster,
)
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k2))+geom_point() + theme_classic()) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k3))+geom_point() + theme_classic()) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k4))+geom_point() + theme_classic()) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k6))+geom_point() + theme_classic())
k2 <- kmeans(sim_df_large_un, centers=2)
k3 <- kmeans(sim_df_large_un, centers=3)
k4 <- kmeans(sim_df_large_un, centers=4)
k6 <- kmeans(sim_df_large_un, centers=6)
sim_df_large_un_kmeans <- sim_df_large_un %>%
mutate("k2" = k2$cluster,
"k3" = k3$cluster,
"k4" = k4$cluster,
"k6" = k6$cluster,
)
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k2))+geom_point() + theme_classic()) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k3))+geom_point() + theme_classic()) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k4))+geom_point() + theme_classic()) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k6))+geom_point() + theme_classic()) + labs(title = "KMeans")
k2 <- kmeans(sim_df_large_un, centers=2)
k3 <- kmeans(sim_df_large_un, centers=3)
k4 <- kmeans(sim_df_large_un, centers=4)
k6 <- kmeans(sim_df_large_un, centers=6)
sim_df_large_un_kmeans <- sim_df_large_un %>%
mutate("k2" = k2$cluster,
"k3" = k3$cluster,
"k4" = k4$cluster,
"k6" = k6$cluster,
)
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k2))+geom_point() + theme_classic()) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k3))+geom_point() + theme_classic()) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k4))+geom_point() + theme_classic()) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k6))+geom_point() + theme_classic())
k2 <- kmeans(sim_df_large_un, centers=2)
k3 <- kmeans(sim_df_large_un, centers=3)
k4 <- kmeans(sim_df_large_un, centers=4)
k6 <- kmeans(sim_df_large_un, centers=6)
sim_df_large_un_kmeans <- sim_df_large_un %>%
mutate("k2" = k2$cluster,
"k3" = k3$cluster,
"k4" = k4$cluster,
"k6" = k6$cluster,
)
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k2))+geom_point() + theme_classic()) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k3))+geom_point() + theme_classic()) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k4))+geom_point() + theme_classic()) +
(ggplot(sim_df_large_un_kmeans, aes(x1,x2, color=k6))+geom_point() + theme_classic())
?bootcluster
?boot cluster
install.packages("fpc")
#install.packages("fpc")
#set desire number of clusters
kbest.p<-5
#   called cboot.hclust.
cboot.hclust <- clusterboot(sim_df_large_un,clustermethod=hclustCBI,
method="ward", k=kbest.p)
#install.packages("fpc")
library("fpc")
#set desire number of clusters
kbest.p<-5
#   called cboot.hclust.
cboot.hclust <- clusterboot(sim_df_large_un,clustermethod=hclustCBI,
method="ward", k=kbest.p)
#   The results of the clustering are in
#   cboot.hclust$result. The output of the hclust()
#   function is in cboot.hclust$result$result.
#
#   cboot.hclust$result$partition returns a
#   vector of clusterlabels.
groups<-cboot.hclust$result$partition
#set desire number of clusters
kbest.p<- 6
#   called cboot.hclust.
cboot.hclust <- clusterboot(sim_df_large_un, clustermethod=hclustCBI,
method="ward", k=kbest.p)
groups<-cboot.hclust$result$partition
groups
print_clusters(groups, kbest.p)
print_clusters <- function(labels, k) {
for(i in 1:k) {
print(paste("cluster", i))
print(protein[labels==i,c("Country","RedMeat","Fish","Fr.Veg")])
}
}
print_clusters(groups, kbest.p)
#install.packages("fpc")
library("fpc")
#set desire number of clusters
kbest.p<- 6
#   called cboot.hclust.
cboot.hclust <- clusterboot(sim_df_large_un, clustermethod=hclustCBI,
method="ward", k=kbest.p)
#   The results of the clustering are in
#   cboot.hclust$result. The output of the hclust()
#   function is in cboot.hclust$result$result.
#
#   cboot.hclust$result$partition returns a
#   vector of clusterlabels.
groups<-cboot.hclust$result$partition
cboot.hclust$bootmean
cboot.hclust$result$result
#install.packages("fpc")
library("fpc")
#set desire number of clusters
kbest.p<- 6
#   called cboot.hclust.
cboot.hclust <- clusterboot(sim_df_large_un, clustermethod=hclustCBI,
method="ward.D", k=kbest.p)
#   The results of the clustering are in
#   cboot.hclust$result. The output of the hclust()
#   function is in cboot.hclust$result$result.
#
#   cboot.hclust$result$partition returns a
#   vector of clusterlabels.
groups<-cboot.hclust$result$partition
cboot.hclust$bootmean
# We can see that the stability on each cluster
clusters <- 1:6
stability <- cboot.hclust$bootmean
ggplot(aes(cluster, stability)) + geom_bar()
# We can see that the stability on each cluster
clusters <- 1:6
stability <- cboot.hclust$bootmean
ggplot(stability, aes(cluster, stability)) + geom_bar()
# We can see that the stability on each cluster
clusters <- 1:6
stability <- cboot.hclust$bootmean
ggplot(stability, aes(stability)) + geom_bar()
# We can see that the stability on each cluster
clusters <- 1:6
stability <- cboot.hclust$bootmean
ggplot(stability, aes(stability)) + geom_hist()
# We can see that the stability on each cluster
clusters <- 1:6
stability <- cboot.hclust$bootmean
plot(x=clusters, y=stability)
# We can see that the stability on each cluster
clusters <- 1:6
stability <- cboot.hclust$bootmean
plot(x=clusters, y=stability, kind="line")
# We can see that the stability on each cluster
clusters <- 1:6
stability <- cboot.hclust$bootmean
plotline(x=clusters, y=stability)
# We can see that the stability on each cluster
clusters <- 1:6
stability <- cboot.hclust$bootmean
plot.line(x=clusters, y=stability)
# We can see that the stability on each cluster
clusters <- 1:6
stability <- cboot.hclust$bootmean
plot(x=clusters, y=stability)
# We can see that the stability on each cluster
clusters <- 1:6
stability <- cboot.hclust$bootmean
plot(x=clusters, y=stability, type="l")
#install.packages("fpc")
library("fpc")
#set desire number of clusters
kbest.p<- 6
#   called cboot.hclust.
cboot.hclust <- clusterboot(sim_df_large_un, clustermethod=kmeansCBI,
method="ward.D", k=kbest.p)
#install.packages("fpc")
library("fpc")
#set desire number of clusters
kbest.p<- 6
#   called cboot.hclust.
cboot.hclust <- clusterboot(sim_df_large_un, clustermethod=kmeansCBI,
method="euclidean", k=kbest.p)
#install.packages("fpc")
library("fpc")
#set desire number of clusters
kbest.p<- 6
#   called cboot.hclust.
cboot.hclust <- clusterboot(sim_df_large_un, clustermethod=hclustCBI,
method="ward.d", k=kbest.p)
#install.packages("fpc")
library("fpc")
#set desire number of clusters
kbest.p<- 6
#   called cboot.hclust.
cboot.hclust <- clusterboot(sim_df_large_un, clustermethod=hclustCBI,
method="ward", k=kbest.p)
#alternative version
cboot.kmeansCBI <- clusterboot(sim_df_large_un, clustermethod=kmeansCBI, k=kbest.p)
#   The results of the clustering are in
#   cboot.hclust$result. The output of the hclust()
#   function is in cboot.hclust$result$result.
#
#   cboot.hclust$result$partition returns a
#   vector of clusterlabels.
groups<-cboot.hclust$result$partition
cboot.hclust$bootmean
cboot.kmeansCBI$bootmean
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
plot(x=clusters, y=stability, type="l") + plot(x=clusters, y=stability2, type="l")
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
plot(x=clusters, y=stability, type="l")
plot(x=clusters, y=stability2, type="l")
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(x=clusters, y=stability) + geom_point()
plot(x=clusters, y=stability2, type="l")
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(x=clusters, y=stability) + geom_point()
#plot(x=clusters, y=stability2, type="l")
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(aes(x=clusters, y=stability)) + geom_point()
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(data=NULL,aes(x=clusters, y=stability)) + geom_point()
#plot(x=clusters, y=stability2, type="l")
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(data=NULL,aes(x=clusters, y=stability)) + geom_line()
#plot(x=clusters, y=stability2, type="l")
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
(ggplot(data=NULL,aes(x=clusters, y=stability)) + geom_line(title="HCUSTCBI"))+
ggplot(data=NULL,aes(x=clusters, y=stability2)) + geom_line()
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
(ggplot(data=NULL,aes(x=clusters, y=stability)) + geom_line(labs="HCUSTCBI"))+
ggplot(data=NULL,aes(x=clusters, y=stability2)) + geom_line()
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
(ggplot(data=NULL,aes(x=clusters, y=stability)) + geom_line("oi"))+
ggplot(data=NULL,aes(x=clusters, y=stability2)) + geom_line()
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
(ggplot(data=NULL,aes(x=clusters, y=stability)) + geom_line(aes("oi"))+
ggplot(data=NULL,aes(x=clusters, y=stability2)) + geom_line()
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
(ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability)) + labs(title = "Hclust"))
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
(ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability, label="oi"))
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
(ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability, labs="oi"))
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
(ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability))
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability))
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability) + geom_line(aes(x=clusters, y=stability2))
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability)) + geom_line(aes(x=clusters, y=stability2))
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability, show.legend="Oi")) + geom_line(aes(x=clusters, y=stability2))
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability), show.legend="Oi") + geom_line(aes(x=clusters, y=stability2))
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability), labels='teste') + geom_line(aes(x=clusters, y=stability2))
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability), labs='teste') + geom_line(aes(x=clusters, y=stability2))
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability, color='blue'), labs='teste') + geom_line(aes(x=clusters, y=stability2))
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability, color='HCLUST')) + geom_line(aes(x=clusters, y=stability2, color="Kmeans"))
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability, color='HCLUST')) + geom_line(aes(x=clusters, y=stability2, color="Kmeans")) + xlim(0,7) + ylim(0,1)
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability, color='HCLUST')) + geom_line(aes(x=clusters, y=stability2, color="Kmeans")) + xlim(1,6) + ylim(0,1)
# We can see that the stability on each cluster (we see that k=5 has the most stability and 3 and 6 the fewer, as we see from previous example)
clusters <- 1:6
stability2 <- cboot.kmeansCBI$bootmean
stability <- cboot.hclust$bootmean
ggplot(data=NULL) + geom_line(aes(x=clusters, y=stability, color='HCLUST')) + geom_line(aes(x=clusters, y=stability2, color="Kmeans")) + xlim(1,6) + ylim(0,1) + labs(title="Stability test with resampling")
cboot.hclust
cboot.kmeansCBI
