"0","while ((centroid1_new != centroid1) & centroid2_new != centroid2) {"
"0","  "
"0","#assign centroids"
"0","cluster1 <- filter(df, df$label == 1)"
"0","cluster2 <- filter(df, df$label == 2)"
"0","centroid1 <- tibble(""X1"" = mean(cluster1$X1), ""X2"" = mean(cluster1$X2))"
"0","centroid2 <- tibble(""X1"" = mean(cluster2$X1), ""X2"" = mean(cluster2$X2))"
"0","for (val in 1:nrow(df)) {"
"0","  "
"0","  var <- df[val,1:2] #store position of each element to compare with centroid"
"0","  "
"0","  #evaluate distance of each obs x each centroid"
"0","  dist1 = dist(rbind(var, centroid1), method=""euclidean"")"
"0","  dist2 = dist(rbind(var, centroid2), method=""euclidean"") "
"0","  #assign label to the closest distance!  "
"0","  df[val, 3] = case_when(dist1 <= dist2 ~ 1, dist2 < dist1 ~ 2) "
"0"," "
"0","}"
"0","#iterating with visuals"
"0","print(  "
"0","  ggplot(df, aes(X1,X2,color=label)) + geom_point() + geom_point(aes(centroid1$X1, centroid1$X2), color = ""red"", size=4) + geom_point(aes(centroid2$X1, centroid2$X2), color = ""green"", size=4) + theme_minimal()+ggtitle(""Iterative PLOT"")"
"0","  )"
"0","cluster1 <- filter(df, df$label == 1)"
"0","cluster2 <- filter(df, df$label == 2)"
"0","centroid1_new <- tibble(""X1"" = mean(cluster1$X1), ""X2"" = mean(cluster1$X2))"
"0","centroid2_new <- tibble(""X1"" = mean(cluster2$X1), ""X2"" = mean(cluster2$X2))"
"0","}"
"2","the condition has length > 1 and only the first element will be used"
