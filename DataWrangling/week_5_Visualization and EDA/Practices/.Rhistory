geom_bar(mapping = aes(x = cut, fill = color, y = ..prop.., group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., fill = cut, group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., color = cut, group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., fill = cut, group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., fill = cut), group = 1)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., fill = cut,  group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..group.., fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..group.., fill = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..group.., fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..group.., fill = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..color.., fill = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., fill = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..color.., fill = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..group.., fill = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1, fill = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_jitter()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy, color = class)) +
geom_jitter()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy, color = class)) +
geom_count()
columns <- c(3,4,5,15)
menu2$Type <- as.factor(menu2$Type)
ggpairs(menu2,columns, mapping = aes(colour=Type))
ggpairs(menu2, columns=c(3,4,20), ggplot2::aes(colour= Type)) +
theme_minimal()
ggpairs(menu2, columns=c(3,4,20), ggplot2::aes(colour= Type)) +
theme_minimal()
#install.packages("WVPlots")
library(WVPlots)
PairPlot(menu2,
colnames(menu2[, c(3,4,20)]),
"Menu2",
group_var = "Type") + theme_minimal()
menu2 %>%
filter(Category == "Chicken & Fish") %>%
ggplot(aes(x = Item, y = Calories))+
geom_col()+
coord_flip() +
theme_minimal() +
xlab(orientation = "horizontal")
menu2 %>%
filter(Category == "Chicken & Fish") %>%
ggplot(aes(x = Item, y = Calories))+
geom_col()+
coord_flip() +
theme_minimal() +
xlab(position = "horizontal")
menu2 %>%
filter(Category == "Chicken & Fish") %>%
ggplot(aes(x = Item, y = Calories))+
geom_col()+
coord_flip() +
theme_minimal()
menu2 %>%
filter(Category == "Chicken & Fish") %>%
ggplot(aes(x = Item, y = Calories))+
geom_col()+
coord_flip() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust=1))
menu2 %>%
filter(Category == "Chicken & Fish") %>%
ggplot(aes(x = Item, y = Calories))+
geom_col()+
coord_flip() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust=1))
menu2 %>%
filter(Category == "Chicken & Fish") %>%
ggplot(aes(x = Item, y = Calories))+
geom_col()
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust=1))
menu2 %>%
filter(Category == "Chicken & Fish") %>%
ggplot(aes(x = Item, y = Calories))+
geom_col()
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust=1))
menu2 %>%
filter(Category == "Chicken & Fish") %>%
ggplot(aes(x = Item, y = Calories))+
geom_col()+
coord_flip() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust=1))
ggplot(menu2, aes(Serving.Size, Calories))+
geom_point(alpha = 0.3) +
geom_smooth() +
theme_minimal()
ggplot(menu2, aes(Serving.Size, Calories))+
geom_point(alpha = 0.3) +
theme_minimal()
ggplot(menu2, aes(Serving.Size, Calories, color = Type))+
geom_point(alpha = 0.3) +
geom_smooth() +
theme_minimal()
ggplot(menu2, aes(Serving.Size, Calories, color = Category))+
geom_point(alpha = 0.3) +
geom_smooth() +
theme_minimal()
menu2 %>%
filter(Type == "Beverage")
ggplot(menu2, aes(Serving.Size, Calories, color = Category))+
geom_point(alpha = 0.3) +
geom_smooth(color = "blue") +
facet_wrap(~Category, nrow=9, ncol = 3) +
theme_minimal()
menu2 %>%
filter(Type == "Beverage") %>%
ggplot(menu2, aes(Serving.Size, Calories, color = Category))+
geom_point(alpha = 0.3) +
geom_smooth(color = "blue") +
facet_wrap(~Category, nrow=9, ncol = 3) +
theme_minimal()
menu2 %>%
filter(Type == "Beverage") %>%
ggplot(aes(Serving.Size, Calories, color = Category))+
geom_point(alpha = 0.3) +
geom_smooth(color = "blue") +
facet_wrap(~Category, nrow=9, ncol = 3) +
theme_minimal()
menu2 %>%
filter(Type == "Drink") %>%
ggplot(aes(Serving.Size, Calories, color = Category))+
geom_point(alpha = 0.3) +
geom_smooth(color = "blue") +
facet_wrap(~Category, nrow=9, ncol = 3) +
theme_minimal()
menu2 %>%
filter(Type == "Drinks") %>%
ggplot(aes(Serving.Size, Calories, color = Category))+
geom_point(alpha = 0.3) +
geom_smooth(color = "blue") +
facet_wrap(~Category, nrow=9, ncol = 3) +
theme_minimal()
ggplot(menu2, aes(Serving.Size, Calories, color = Category))+
geom_point(alpha = 0.3) +
geom_smooth(color = "blue") +
facet_wrap(~Category, nrow=9, ncol = 3) +
theme_minimal()
ggpairs(menu2, columns=c(3,4,20), aes(colour= Type)) +
theme_minimal()
baseball <- Hitters
head(Hitters)
head(baseball)
head(baseball)
View(Hitters)
View(baseball)
1 + 1
---
title: "R For Data Sciences - Exercises"
subtitle: "Chapter 3 - Visualisation"
author: "Hans Franke"
date: "September 29, 2020"
output: rmarkdown::github_document
---
```{r}
library(tidyverse)
library(ISLR)
```
1 + 1
---
title: "R For Data Sciences - Exercises"
subtitle: "Chapter 3 - Visualisation"
author: "Hans Franke"
date: "September 29, 2020"
output: rmarkdown::github_document
---
---
title: "R For Data Sciences - Exercises"
subtitle: "Chapter 3 - Visualisation"
author: "Hans Franke"
date: "September 29, 2020"
output: rmarkdown::github_document
---
```{r}
library(tidyverse)
library(ISLR)
```
1 + 1
---
title: "R For Data Sciences - Exercises"
subtitle: "Chapter 3 - Visualisation"
author: "Hans Franke"
date: "September 29, 2020"
output: rmarkdown::github_document
---
rmarkdown::render("analysis.R")
rmarkdown::render("analysis.R", "pdf_document")
rmarkdown::render("test.R")
rmarkdown::render("test.R", "test")
#install.packages("WVPlots")
library(WVPlots)
PairPlot(menu2,
colnames(menu2[, c(3,4,20)]),
"Menu2",
group_var = "Type") + theme_minimal() + coord_polar()
homeruns_plot <-
ggplot(Hitters, aes(x = HmRun, y = Hits)) +
geom_point() +
labs(x = "HmRun", y = "Hits") + coord_polar()
homeruns_plot
homeruns_plot <-
ggplot(Hitters, aes(x = HmRun, y = Hits)) +
geom_point() +
labs(x = "HmRun", y = "Hits")
homeruns_plot
homeruns_plot <-
ggplot(Hitters, aes(x = HmRun, y = Hits)) +
geom_point(aes(color=HmRun)) +
labs(x = "HmRun", y = "Hits")
homeruns_plot
data("trees")
calor_hist <-
ggplot()+
geom_histogram(menu2, aes(Calories))
calor_hist <-
ggplot()+
geom_histogram(data = menu2, mappind = aes(Calories))
calor_hist
#plot Carries
ggplot(delays_carr_dest, aes(carrier, avg_delay)) +
geom_point()
library("nycflights13")
library("tidyverse")
filter(flights, arr_delay >=120)
filter(flights, dest == "IAH" | dest == "HOU")
filter(flights, carrier %in% c("AA", "DL", "UA"))
filter(flights, month >=7 & month <=9)
filter (flights, arr_delay > 120 & dep_delay <= 0 )
filter(flights, dep_delay >= 60, dep_delay - arr_delay > 30)
#look for midnight = 2400
summary(flights$dep_time)
filter(flights, dep_time <= 600 | dep_time == 2400)
# column, left, right
filter(flights, between(month, 7, 9))
filter(flights, is.na(dep_time))
arrange(flights, desc(is.na(dep_time)), dep_time)
arrange(flights, desc(dep_delay))
arrange(flights, air_time)
#nothing happens, select ignores the duplicates values
head(select(flights, month, month))
# it picks the columns that exists in dataframe, and ignore who dosen`t
head(select(flights, one_of(c("year", "month", "day", "dep_delay", "arr_delay", "hans"))))
#default = IGNORE case, if u want to exact match use argument (ignore.case = FALSE)
head(select(flights, contains("TIME")))
# First need to convert undestand (number 1504 is 15:04pm) so in other words we want to convert to minutes.
1504 %/% 100 * 60 + 1504 %% 100
flights_mod <- mutate(flights, dep_time_mins = (dep_time %/% 100 * 60) + (dep_time %% 100))
#select only this table
head(select(flights_mod, dep_time, dep_time_mins))
flight_mod2 <- mutate(flights, air_time, air_time_new = arr_time - dep_time )
select(flight_mod2, air_time, arr_time, dep_time, air_time_new)
flights_delayed3 <- top_n(flights, 10, dep_delay)
flights_delayed3 <- arrange(flights_delayed3, desc(dep_delay))
select(flights_delayed3, month, day, carrier, flight, dep_delay)
1:3 + 1:10
# Operation is like;
c(1 + 1, 2 + 2, 3 + 3, 1 + 4, 2 + 5, 3 + 6, 1 + 7, 2 + 8, 3 + 9, 1 + 10)
flights %>%
group_by(dest) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest == "HNL")
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
#First expression;
not_cancelled %>% count(dest)
#We need to use group_by + tally()
not_cancelled %>%
group_by(dest) %>%
tally()
# 2nd expression
not_cancelled %>% count(tailnum, wt = distance)
#We need to use group_by + tally()
not_cancelled %>%
group_by(tailnum) %>%
tally(distance)
filter(flights, !is.na(dep_delay), is.na(arr_delay)) %>%
select(dep_time, arr_time, sched_arr_time, dep_delay, arr_delay)
# Determine the total cancelled flights by day
cancelled_per_day <-
flights %>%
mutate(cancelled = (is.na(arr_delay) | is.na(dep_delay))) %>% #create cancelled flights
group_by(year, month, day) %>%
summarise(
cancelled_num = sum(cancelled),
flights_num = n(),
)
ggplot(cancelled_per_day, aes(flights_num, cancelled_num)) +
geom_point()
# Look for AVG delay in each day
cancelled_and_delays <-
flights %>%
mutate(cancelled = (is.na(arr_delay) | is.na(dep_delay))) %>%
group_by(year, month, day) %>%
summarise(
cancelled_prop = mean(cancelled),
avg_dep_delay = mean(dep_delay, na.rm = TRUE),
avg_arr_delay = mean(arr_delay, na.rm = TRUE)
)
cancelled_and_delays
ggplot(cancelled_and_delays) +
geom_point(aes(x = avg_dep_delay, y = cancelled_prop))
flights %>%
filter(!is.na(arr_delay)) %>%
# Total delay by carrier within each origin, dest
group_by(origin, dest, carrier) %>%
summarise(
arr_delay = sum(arr_delay),
flights = n()
) %>%
# Total delay within each origin dest
group_by(origin, dest) %>%
mutate(
arr_delay_total = sum(arr_delay),
flights_total = sum(flights)
) %>%
# average delay of each carrier - average delay of other carriers
ungroup() %>%
mutate(
arr_delay_others = (arr_delay_total - arr_delay) /
(flights_total - flights),
arr_delay_mean = arr_delay / flights,
arr_delay_diff = arr_delay_mean - arr_delay_others
) %>%
# remove NaN values (when there is only one carrier)
filter(is.finite(arr_delay_diff)) %>%
# average over all airports it flies to
group_by(carrier) %>%
summarise(arr_delay_diff = mean(arr_delay_diff)) %>%
arrange(desc(arr_delay_diff))
#plot Carries
ggplot(delays_carr_dest, aes(carrier, avg_delay)) +
geom_point()
#plot Carries
ggplot(delays_carr_dest, aes(carrier, avg_delay)) +
geom_point()
library("nycflights13")
library("tidyverse")
#plot Carries
ggplot(delays_carr_dest, aes(carrier, avg_delay)) +
geom_point()
flights %>%
filter(!is.na(arr_delay)) %>%
# Total delay by carrier within each origin, dest
group_by(origin, dest, carrier) %>%
summarise(
arr_delay = sum(arr_delay),
flights = n()
) %>%
# Total delay within each origin dest
group_by(origin, dest) %>%
mutate(
arr_delay_total = sum(arr_delay),
flights_total = sum(flights)
) %>%
# average delay of each carrier - average delay of other carriers
ungroup() %>%
mutate(
arr_delay_others = (arr_delay_total - arr_delay) /
(flights_total - flights),
arr_delay_mean = arr_delay / flights,
arr_delay_diff = arr_delay_mean - arr_delay_others
) %>%
# remove NaN values (when there is only one carrier)
filter(is.finite(arr_delay_diff)) %>%
# average over all airports it flies to
group_by(carrier) %>%
summarise(arr_delay_diff = mean(arr_delay_diff)) %>%
arrange(desc(arr_delay_diff))
#plot Carries
ggplot(flights, aes(carrier, avg_delay)) +
geom_point()
library(tidyverse)
library(ISLR)
ggplot(mtcars, aes(mpg,hwy))
ggplot(mtcars, aes(mpg,cyl))
ggplot(mtcars, aes(mpg,cyl)) +
geom_text()
ggplot(mtcars, aes(mpg,cyl, color=cyl)) +
geom_text()
ggplot(mtcars, aes(mpg,cyl, color=cyl)) +
geom_point()
ggplot(mtcars, aes(cyl,mpg, color=cyl)) +
geom_point()
ggplot(mtcars, aes(vs,mpg, color=cyl)) +
geom_point()
ggplot(mtcars, aes(mpg,vs, color=cyl)) +
geom_point()
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point()
ggplot(mtcars, aes(gear,vs, color=gear)) +
geom_point()
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point()
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point() +
geom_text()
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point() +
geom_text(label = cyl)
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point() +
geom_text(label = "cyl")
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_text(label = "cyl")
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point() +
geom_text(label = "cyl")
ggplot(mtcars, aes(gear,vs, color=cyl), color = "gray") +
geom_point() +
geom_text(label = "cyl")
ggplot(mtcars, aes(gear,vs, color=cyl), color = "gray") +
geom_point(color = "gray") +
geom_text(label = "cyl")
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point(color = "gray") +
geom_text(label = "cyl")
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point(color = "red") +
geom_text(label = "cyl")
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point(color = "red") +
geom_text(label = "cyl", color = "red")
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(label = "am", color = "red")
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(label = am, color = "red")
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(color = "red")
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(am),color = "red")
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(label = am),color = "red")
view(mtcars)
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(label = am),color = "red", position = "dodge")
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(label = am),color = "red", position = "dodge2")
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(label = am),color = "red", position_dodge2())
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(label = am),color = "red", position_dodge())
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(label = am),color = "red", position_jitter())
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(label = am),color = "red", position = "jitter")
view(flights)
view(trees)
library(tidyverse)
library(nycflights13)
library(ISLR)
view(flights)
ggplot(flights, aes(dp_time,dest, color=dest)) +
geom_point(color = "red") +
geom_text(aes(label = dest),color = "red", position = "jitter")
ggplot(flights, aes(dep_time,dest, color=dest)) +
geom_point(color = "red") +
geom_text(aes(label = dest),color = "red", position = "jitter")
ggplot(flights, aes(dep_time,dest, color=dest)) +
geom_point(color = "red") +
geom_text(aes(label = dest),color = "red")
ggplot(flights, aes(dep_time,dest)) +
geom_point(color = "red") +
geom_text(aes(label = dest),color = "red")
ggplot(flights, aes(carrier,dest)) +
geom_point(color = "red") +
geom_text(aes(label = dest),color = "red")
ggplot(flights, aes(hour,dest)) +
geom_point(color = "red") +
geom_text(aes(label = dest),color = "red")
ggplot(flights, aes(hour,carrier)) +
geom_point(color = "red") +
geom_text(aes(label = dest),color = "red")
