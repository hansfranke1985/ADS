# average over all airports it flies to
group_by(carrier) %>%
summarise(arr_delay_diff = mean(arr_delay_diff)) %>%
arrange(desc(arr_delay_diff))
#plot Carries
ggplot(flights, aes(carrier, avg_delay)) +
geom_point()
library(tidyverse)
library(ISLR)
ggplot(mtcars, aes(mpg,hwy))
ggplot(mtcars, aes(mpg,cyl))
ggplot(mtcars, aes(mpg,cyl)) +
geom_text()
ggplot(mtcars, aes(mpg,cyl, color=cyl)) +
geom_text()
ggplot(mtcars, aes(mpg,cyl, color=cyl)) +
geom_point()
ggplot(mtcars, aes(cyl,mpg, color=cyl)) +
geom_point()
ggplot(mtcars, aes(vs,mpg, color=cyl)) +
geom_point()
ggplot(mtcars, aes(mpg,vs, color=cyl)) +
geom_point()
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point()
ggplot(mtcars, aes(gear,vs, color=gear)) +
geom_point()
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point()
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point() +
geom_text()
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point() +
geom_text(label = cyl)
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point() +
geom_text(label = "cyl")
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_text(label = "cyl")
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point() +
geom_text(label = "cyl")
ggplot(mtcars, aes(gear,vs, color=cyl), color = "gray") +
geom_point() +
geom_text(label = "cyl")
ggplot(mtcars, aes(gear,vs, color=cyl), color = "gray") +
geom_point(color = "gray") +
geom_text(label = "cyl")
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point(color = "gray") +
geom_text(label = "cyl")
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point(color = "red") +
geom_text(label = "cyl")
ggplot(mtcars, aes(gear,vs, color=cyl)) +
geom_point(color = "red") +
geom_text(label = "cyl", color = "red")
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(label = "am", color = "red")
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(label = am, color = "red")
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(color = "red")
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(am),color = "red")
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(label = am),color = "red")
view(mtcars)
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(label = am),color = "red", position = "dodge")
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(label = am),color = "red", position = "dodge2")
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(label = am),color = "red", position_dodge2())
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(label = am),color = "red", position_dodge())
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(label = am),color = "red", position_jitter())
ggplot(mtcars, aes(gear,vs, color=am)) +
geom_point(color = "red") +
geom_text(aes(label = am),color = "red", position = "jitter")
view(flights)
view(trees)
library(tidyverse)
library(nycflights13)
library(ISLR)
view(flights)
ggplot(flights, aes(dp_time,dest, color=dest)) +
geom_point(color = "red") +
geom_text(aes(label = dest),color = "red", position = "jitter")
ggplot(flights, aes(dep_time,dest, color=dest)) +
geom_point(color = "red") +
geom_text(aes(label = dest),color = "red", position = "jitter")
ggplot(flights, aes(dep_time,dest, color=dest)) +
geom_point(color = "red") +
geom_text(aes(label = dest),color = "red")
ggplot(flights, aes(dep_time,dest)) +
geom_point(color = "red") +
geom_text(aes(label = dest),color = "red")
ggplot(flights, aes(carrier,dest)) +
geom_point(color = "red") +
geom_text(aes(label = dest),color = "red")
ggplot(flights, aes(hour,dest)) +
geom_point(color = "red") +
geom_text(aes(label = dest),color = "red")
ggplot(flights, aes(hour,carrier)) +
geom_point(color = "red") +
geom_text(aes(label = dest),color = "red")
dat <- read.csv('vet.data.csv')
str(dat)
#loading dataset + analysing the file
dat <- read.csv('vet.data.csv')
head(dat)
dat <- dat %>%
pivot_longer(cols = c(value2017, value2018), names_to = 'year', values_to = 'count') %>%
mutate(year = str_remove(year, "value"))
dat <- dat %>%
pivot_longer(cols = c(value2017, value2018), names_to = 'year', values_to = 'count') %>%
mutate(year = str_remove(year, "value"))
dat <- dat %>%
pivot_longer(cols = c(value2017, value2018), names_to = 'year', values_to = 'count') %>%
mutate(year = str_remove(year, "value"))
library(tidyverse)
library(ISLR)
dat <- dat %>%
pivot_longer(cols = c(value2017, value2018), names_to = 'year', values_to = 'count') %>%
mutate(year = str_remove(year, "value"))
dat <- dat %>%
pivot_longer(cols = c(value2017, value2018), names_to = 'year', values_to = 'count') %>%
mutate(year = str_remove(year, "value"))
head(dat)
dat <- dat %>%
pivot_wider(names_from = type, values_from = count)
head(dat)
dat <- dat %>%
separate(col = gen_age, into = c('gender', 'age'))
head(dat)
dat <- dat %>%
unite(col = ID, clinic, client, remove = FALSE)
head(dat)
dat <- read.csv('vet.data.csv')
dat <- dat %>%
pivot_longer(cols = c(value2017, value2018), names_to = 'year', values_to = 'count') %>%
mutate(year = str_remove(year, "value")) %>%
pivot_wider(names_from = type, values_from = count) %>%
separate(col = gen_age, into = c('gender', 'age')) %>%
unite(col = ID, clinic, client, remove = FALSE) %>%
mutate(age = as.numeric(age))
ggplot(dat, aes(breed)) +
geom_histogram() + theme_minimal()
ggplot(dat, aes(breed)) +
geom_bar() + theme_minimal()
ggplot(dat, aes(food_quality)) +
geom_bar() + theme_minimal()
ggplot(dat, aes(area)) +
geom_bar() + theme_minimal()
ggplot(dat, aes(weight, conditional)) +
geom_point() +
facet_wrap(~breed)
ggplot(dat, aes(weight)) +
geom_point() +
facet_wrap(~breed)
ggplot(dat, aes(weight)) +
geom_histogram() +
facet_wrap(~breed)
theme_minimal()
ggplot(dat, aes(weight)) +
geom_histogram() +
facet_wrap(~breed)
theme_minimal()
ggplot(dat, aes(weight)) +
geom_boxplot() +
facet_wrap(~breed)
theme_minimal()
# need to select in which ID`s
dat %>%
filter(weight <3 & weight >20) %>%
select(ID)
# need to select in which ID`s
dat %>%
filter(weight <3 | weight >20) %>%
select(ID)
dat %>%
group_by(breed) %>%
summarise( mean(n()))
# Filtering all cases with a weight between 3 and 20 lbs.
dat <- dat %>%
mutate(weight = replace(weight, weight < 3, NA)) %>%
mutate(weight = replace(weight, weight > 20, NA))
dat %>%
group_by(breed) %>%
summarise( mean(n()))
dat %>%
group_by(breed) %>%
summarise( mean(weight))
dat %>%
group_by(breed) %>%
summarise( mean(weight), ra.rm = TRUE)
dat %>%
group_by(breed) %>%
summarise( mean(weight, ra.rm = TRUE))
dat %>%
group_by(breed) %>%
summarise( mean = mean(weight, ra.rm = TRUE))
dat %>%
group_by(breed) %>%
summarise( mean = mean(weight, na.rm = TRUE))
ggplot(dat, aes(age, weight)) +
geom_smooth()+
theme_minimal()
ggplot(dat, aes(age, weight)) +
geom_point() +
geom_smooth()+
theme_minimal()
ggplot(dat, aes(age, weight)) +
geom_point() +
geom_smooth()+
theme_minimal()+
facet_wrap(breed ~ area)
ggplot(dat, aes(age, weight)) +
geom_point() +
geom_smooth()+
theme_minimal()+
facet_grid(breed ~ area)
dat %>%
group_by(year)
dat %>%
filter(year == 2017) %>%
select(weight)
dat %>%
filter(year == 2017) %>%
select(weight) %>%
summarise( sum(weight))
dat %>%
filter(year == 2017) %>%
select(weight) %>%
summarise(sum(n())
dat %>%
filter(year == 2017) %>%
select(weight) %>%
summarise( sum(n() ))
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight) %>%
summarise( sum(n() ))
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight) %>%
summarise( sum(n() ))
w_2018 / w_2017
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight) %>%
summarise( sum(n() ))
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight) %>%
summarise( sum(n() ))
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight) %>%
summarise( sum(n() ))
w_2018
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight) %>%
summarise( sum(n() ))
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight) %>%
summarise( sum() )
w_2018
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight) %>%
summarise( sum(n() ))
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight) %>%
summarise( sum(weight) )
w_2018
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight) %>%
summarise( sum(n() ))
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight) %>%
summarise( sum(weight, na.rm = TRUE) )
w_2018
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight) %>%
summarise( sum(weight, na.rm = TRUE) )
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight) %>%
summarise( sum(weight, na.rm = TRUE) )
w_2018 / w_2017
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight) %>%
summarise( sum(weight, na.rm = TRUE) )
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight) %>%
summarise( sum(weight, na.rm = TRUE) )
w_2018 / w_2017 - 1
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight)
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight)
w_2018 / w_2017
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight)
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight)
mean(w_2018 / w_2017 )
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight)
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight)
mean(w_2018 / w_2017, na.rm = TRUE )
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight)
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight)
mean <- (w_2018 / w_2017, na.rm = TRUE )
mean(dat %>%
filter(year == 2017) %>%
select(weight) <
dat %>%
filter(year == 2018) %>%
select(weight), na.rm = TRUE)
dat %>%
filter(year == 2018) %>%
select(weight), na.rm = TRUE)
dat %>%
filter(year == 2018) %>%
select(weight)
mean(dat %>%
filter(year == 2017) %>%
select(weight) <
dat %>%
filter(year == 2018) %>%
select(weight)
mean(dat %>%
mean(dat %>%
filter(year == 2017) %>%
select(weight) <
dat %>%
filter(year == 2018) %>%
select(weight), na.rm = TRUE)
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight, year)
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight, year)
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight, year)
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight, year)
ggplot(w_2017, aes(weight, year)) + geom_point()
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight, year)
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight, year)
ggplot(w_2017, aes(weight, year)) + geom_boxplot()
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight, year)
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight, year)
ggplot(w_2017, aes(year, weight)) + geom_boxplot()
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight, year)
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight, year)
ggplot(w_2017, aes(year, weight)) + geom_boxplot() + ggplot(w_2018, aes(year, weight)) + geom_boxplot()
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight, year)
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight, year)
ggplot(w_2017, aes(year, weight)) + geom_boxplot() + geom_boxplot(data = w_2018, aes(year, weight))
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight, year)
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight, year)
ggplot() + geom_point(w_2017, aes(year, weight)) + geom_point(w_2018, aes(year, weight))
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight, year)
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight, year)
ggplot() + geom_point(data = w_2017, aes(year, weight)) + geom_point(w_2018, aes(year, weight))
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight, year)
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight, year)
ggplot(data = w_2017, aes(year, weight)) + geom_point() + geom_point(w_2018, aes(year, weight))
w_2017 <- dat %>%
filter(year == 2017) %>%
select(weight, year)
w_2018 <- dat %>%
filter(year == 2018) %>%
select(weight, year)
ggplot(w_2017, aes(year, weight)) + geom_boxplot() + geom_boxplot(data = w_2018, aes(year, weight))
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate, color==EBOLA))+
geom_point(color = "gray")+
geom_text(aes(label=diseasesnames), color="gray")
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate, color=="EBOLA"))+
geom_point(color = "gray")+
geom_text(aes(label=diseasesnames), color="gray")
library(tidyverse)
#Creating sample df
mortality <- c(0.55, 0.35, 0.5, 0.3)
transmission <- c(1.2,0.5,2.5,5)
diseases <- c("bird flu", "MERS", "EBOLA", "smallplox")
disease <- tibble( mortalityrate = mortality, transmissionrate = transmission, diseasesnames = diseases)
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate, color=="EBOLA"))+
geom_point(color = "gray")+
geom_text(aes(label=diseasesnames), color="gray")
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate, color=="EBOLA"))+
geom_point()+
geom_text(aes(label=diseasesnames), color="gray")
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate, color=="EBOLA"))+
geom_point()+
geom_text(aes(label=diseasesnames))
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate, color=="EBOLA"))+
geom_point(color=="EBOLA")+
geom_text(aes(label=diseasesnames))
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate, color=="EBOLA"))+
geom_point(aes(color=="EBOLA"))+
geom_text(aes(label=diseasesnames))
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate))+
geom_point(aes(color=="EBOLA"))+
geom_text(aes(label=diseasesnames))
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate, color=="EBOLA"))+
geom_point()+
geom_text(aes(label=diseasesnames))
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate, color="EBOLA"))+
geom_point()+
geom_text(aes(label=diseasesnames))
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate, color=="EBOLA"))+
geom_point()+
geom_text(aes(label=diseasesnames))
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate, color=="EBOLA"))+
geom_point()
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate, color= diseases == "EBOLA"))+
geom_point()
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate, color= diseases == "EBOLA"))+
geom_point()+
geom_text(labels= diseases)
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate, color= diseases == "EBOLA"))+
geom_point()+
geom_text(aes(labels= diseases))
#Plot same as exam: Using COLOR and TEXT
ggplot(disease, aes(x=transmissionrate, y = mortalityrate, color= diseases == "EBOLA"))+
geom_point()+
geom_text(aes(label= diseases))
ggplot(dat, aes(weight)) +
geom_histogram() +
facet_wrap(~breed)
