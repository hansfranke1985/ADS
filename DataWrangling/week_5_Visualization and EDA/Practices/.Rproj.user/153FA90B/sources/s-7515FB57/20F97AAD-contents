---
title: "R For Data Sciences - Exercises"
subtitle: "Assigment 3 - Visualisation"
author: "Hans Franke"
date: "October 1, 2020"
output: rmarkdown::github_document
---

```{r}
library(tidyverse)
library(ISLR)
```


# 1. Read Data
```{r}
#loading dataset + analysing the file
dat <- read.csv('vet.data.csv')
head(dat)
```

# 2. List the thing that need to be changed to make this dataset tidy, it may help to draw out a tidy format on a piece of paper.

- Weight and BMI are 2 variables -> there should be a column for weight and one for BMI

- There are 2 observations per client (2017 & 2018) -> each year should get its own row, year should be a variable (with its own column) to indicate wheter the row displays observations mage in 2017 or 2018.

- Gen_age is a column where two pieces of information (gender and age) share a cell, these should be splitted up into two different columns.

# 3. Use ‘pivot_longer()’ to restructure the data such that the data from 2017 and 2018 are no longer in two different columns, but with year as a variable indicating when the data is collected. You can use ‘mutate()’ in combination with ‘str_remove()’ to get rid of the 'value' part.

```{r}
dat <- dat %>% 
  pivot_longer(cols = c(value2017, value2018), names_to = 'year', values_to = 'count') %>% 
  mutate(year = str_remove(year, "value"))

head(dat)
```

# 4. Use ‘pivot_wider’ to restructure the data so that weight and BMI get their own column.

```{r}
dat <- dat %>% 
  pivot_wider(names_from = type, values_from = count)

head(dat)
```

# 5. Use ‘separate()’ to make a separate cloumn for age and one for gender.

```{r}
dat <- dat %>% 
  separate(col = gen_age, into = c('gender', 'age'))

head(dat)
```

# 6. Check whether each row in this dataset has a unique identifier, if not, assign one. Tip: ‘unite()’ can be usefull if you want to combine information from two different cells into one cell.

```{r}
dat <- dat %>% 
  unite(col = ID, clinic, client, remove = FALSE)

head(dat)
```

# 8. Reload the data and tidy it again, but now using pipes.

```{r}
dat <- read.csv('vet.data.csv')

dat <- dat %>% 
  pivot_longer(cols = c(value2017, value2018), names_to = 'year', values_to = 'count') %>% 
  mutate(year = str_remove(year, "value")) %>% 
  pivot_wider(names_from = type, values_from = count) %>% 
  separate(col = gen_age, into = c('gender', 'age')) %>% 
  unite(col = ID, clinic, client, remove = FALSE) %>% 
  mutate(age = as.numeric(age))
```


# 9. Visualise the distribution of breed, food quality and and area.

```{r}
ggplot(dat, aes(breed)) + 
  geom_bar() + theme_minimal()
```
```{r}
ggplot(dat, aes(food_quality)) + 
  geom_bar() + theme_minimal()
```
```{r}
ggplot(dat, aes(area)) + 
  geom_bar() + theme_minimal()
```


# 10. Visualise the distribution of weight, conditional on breed using ‘facet_wrap()’.

```{r}
ggplot(dat, aes(weight)) + 
  geom_histogram() +
  facet_wrap(~breed)
  theme_minimal()
```


# 11. Use ‘geom_boxplot()’ in combination with ‘facet_wrap()’ to check if there are any outliers in the data.
```{r}
ggplot(dat, aes(weight)) + 
  geom_boxplot() +
  facet_wrap(~breed)
  theme_minimal()
```


# 12. Assume that weights below 3 lbs or above 20 lbs are the result of a mistake made at the data input, replace these values with NA. Which cases are affected by this decision?

```{r}
# need to select in which ID`s
dat %>%
  filter(weight <3 | weight >20) %>%
  select(ID)
```
```{r}
# Filtering all cases with a weight between 3 and 20 lbs.
dat <- dat %>% 
  mutate(weight = replace(weight, weight < 3, NA)) %>% 
  mutate(weight = replace(weight, weight > 20, NA))
```


# 13. What is the mean weight for each breed? Use ‘group_by()’ in combination with ‘summarise()’.

```{r}
dat %>%
  group_by(breed) %>%
  summarise( mean = mean(weight, na.rm = TRUE))
```

# 14. Visualise the relationship between age and weight, add a regressionline to your plot using ‘geom_smooth()’. Are weight and age related?

```{r}
ggplot(dat, aes(age, weight)) +
  geom_point() +
  geom_smooth()+
  theme_minimal()
```


# 15. Use ‘facet_grid()’ make the same visualisation, but now conditioning on breed and area. How does this alter your conclusion?
```{r}
ggplot(dat, aes(age, weight)) +
  geom_point() +
  geom_smooth()+
  theme_minimal()+
  facet_grid(breed ~ area)
```


# 16.  Based on the visualisations made for question 15 and 16, can you draw the conclusion that individual cats don’t weigh more as they get older? Explain your answer.

 No, you can't. Even though there is no clear correlation between weight and age on group level (all cats), this doesn't mean that there is no relation between age and weight on an individual level (1 cat). Deducing inferences about the individual from inferences about the group is known under the term *ecological fallacy*.   

# 17. To get an idea if cats tend to weigh more as they get older on an individual level, you could compare the weight of each cat in 2017 and 2018 on an individual level. In how many percent of the cases did cats gain weight over the year?

```{r}
mean(dat %>% 
  filter(year == 2017) %>% 
  select(weight) <
    dat %>% 
      filter(year == 2018) %>% 
      select(weight), na.rm = TRUE) 
```

```{r}
w_2017 <- dat %>% 
  filter(year == 2017) %>% 
  select(weight, year) 

w_2018 <- dat %>% 
  filter(year == 2018) %>% 
  select(weight, year) 

ggplot(w_2017, aes(year, weight)) + geom_boxplot() + geom_boxplot(data = w_2018, aes(year, weight))
```

